module cxxboost_container [system] {
	header "boost/container/slist.hpp"
	header "boost/container/flat_map.hpp"
	header "boost/container/container_fwd.hpp"
	header "boost/container/vector.hpp"
	header "boost/container/devector.hpp"
	header "boost/container/map.hpp"
	header "boost/container/scoped_allocator.hpp"
	header "boost/container/new_allocator.hpp"
	header "boost/container/allocator.hpp"
	header "boost/container/allocator_traits.hpp"
	header "boost/container/adaptive_pool.hpp"
	header "boost/container/pmr/slist.hpp"
	header "boost/container/pmr/flat_map.hpp"
	header "boost/container/pmr/resource_adaptor.hpp"
	header "boost/container/pmr/unsynchronized_pool_resource.hpp"
	header "boost/container/pmr/vector.hpp"
	header "boost/container/pmr/devector.hpp"
	header "boost/container/pmr/map.hpp"
	header "boost/container/pmr/list.hpp"
	header "boost/container/pmr/small_vector.hpp"
	header "boost/container/pmr/memory_resource.hpp"
	header "boost/container/pmr/global_resource.hpp"
	header "boost/container/pmr/set.hpp"
	header "boost/container/pmr/monotonic_buffer_resource.hpp"
	header "boost/container/pmr/string.hpp"
	header "boost/container/pmr/deque.hpp"
	header "boost/container/pmr/stable_vector.hpp"
	header "boost/container/pmr/synchronized_pool_resource.hpp"
	header "boost/container/pmr/polymorphic_allocator.hpp"
	header "boost/container/pmr/pool_options.hpp"
	header "boost/container/pmr/flat_set.hpp"
	header "boost/container/list.hpp"
	header "boost/container/small_vector.hpp"
	header "boost/container/node_handle.hpp"
	header "boost/container/detail/copy_move_algo.hpp"
	header "boost/container/detail/pair.hpp"
	header "boost/container/detail/advanced_insert_int.hpp"
	header "boost/container/detail/container_rebind.hpp"
	header "boost/container/detail/allocator_version_traits.hpp"
	header "boost/container/detail/alloc_helpers.hpp"
	header "boost/container/detail/mpl.hpp"
	header "boost/container/detail/dlmalloc.hpp"
	header "boost/container/detail/pool_common.hpp"
	header "boost/container/detail/next_capacity.hpp"
	header "boost/container/detail/adaptive_node_pool.hpp"
	header "boost/container/detail/block_slist.hpp"
	header "boost/container/detail/construct_in_place.hpp"
	header "boost/container/detail/minimal_char_traits_header.hpp"
	header "boost/container/detail/placement_new.hpp"
	header "boost/container/detail/destroyers.hpp"
	header "boost/container/detail/is_container.hpp"
	header "boost/container/detail/is_sorted.hpp"
	header "boost/container/detail/flat_tree.hpp"
	header "boost/container/detail/iterator_to_raw_pointer.hpp"
	header "boost/container/detail/iterators.hpp"
	header "boost/container/detail/algorithm.hpp"
	header "boost/container/detail/config_begin.hpp"
	header "boost/container/detail/transform_iterator.hpp"
	header "boost/container/detail/node_alloc_holder.hpp"
	header "boost/container/detail/allocation_type.hpp"
	header "boost/container/detail/adaptive_node_pool_impl.hpp"
	header "boost/container/detail/function_detector.hpp"
	header "boost/container/detail/type_traits.hpp"
	header "boost/container/detail/alloc_lib.h"
	header "boost/container/detail/block_list.hpp"
	header "boost/container/detail/addressof.hpp"
	header "boost/container/detail/pool_common_alloc.hpp"
	header "boost/container/detail/math_functions.hpp"
	header "boost/container/detail/version_type.hpp"
	header "boost/container/detail/min_max.hpp"
	header "boost/container/detail/thread_mutex.hpp"
	header "boost/container/detail/compare_functors.hpp"
	header "boost/container/detail/is_pair.hpp"
	header "boost/container/detail/tree.hpp"
	header "boost/container/detail/auto_link.hpp"
	header "boost/container/detail/dispatch_uses_allocator.hpp"
	header "boost/container/detail/value_functors.hpp"
	header "boost/container/detail/pair_key_mapped_of_value.hpp"
	header "boost/container/detail/container_or_allocator_rebind.hpp"
	header "boost/container/detail/multiallocation_chain.hpp"
	header "boost/container/detail/value_init.hpp"
	header "boost/container/detail/variadic_templates_tools.hpp"
	header "boost/container/detail/node_pool_impl.hpp"
	header "boost/container/detail/mutex.hpp"
	header "boost/container/detail/singleton.hpp"
	header "boost/container/detail/workaround.hpp"
	header "boost/container/detail/node_pool.hpp"
	header "boost/container/detail/pool_resource.hpp"
	header "boost/container/detail/is_contiguous_container.hpp"
	header "boost/container/detail/iterator.hpp"
	header "boost/container/detail/std_fwd.hpp"
	header "boost/container/detail/config_end.hpp"
	header "boost/container/detail/guards_dended.hpp"
	header "boost/container/set.hpp"
	header "boost/container/node_allocator.hpp"
	header "boost/container/string.hpp"
	header "boost/container/options.hpp"
	header "boost/container/uses_allocator_fwd.hpp"
	header "boost/container/deque.hpp"
	header "boost/container/stable_vector.hpp"
	header "boost/container/throw_exception.hpp"
	header "boost/container/uses_allocator.hpp"
	header "boost/container/flat_set.hpp"
	header "boost/container/static_vector.hpp"
	header "boost/container/scoped_allocator_fwd.hpp"
	export *
}