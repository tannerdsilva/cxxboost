module cxxboost_smart_ptr [system] {
	header "boost/scoped_ptr.hpp"
	header "boost/smart_ptr/scoped_ptr.hpp"
	header "boost/smart_ptr/enable_shared_from.hpp"
	header "boost/smart_ptr/allocate_shared_array.hpp"
	header "boost/smart_ptr/shared_array.hpp"
	header "boost/smart_ptr/owner_less.hpp"
	header "boost/smart_ptr/intrusive_ptr.hpp"
	header "boost/smart_ptr/intrusive_ref_counter.hpp"
	header "boost/smart_ptr/owner_equal_to.hpp"
	header "boost/smart_ptr/make_local_shared_object.hpp"
	header "boost/smart_ptr/make_shared_object.hpp"
	header "boost/smart_ptr/detail/requires_cxx11.hpp"
	header "boost/smart_ptr/detail/spinlock_pt.hpp"
	header "boost/smart_ptr/detail/spinlock_sync.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp"
	header "boost/smart_ptr/detail/sp_nullptr_t.hpp"
	header "boost/smart_ptr/detail/local_sp_deleter.hpp"
	header "boost/smart_ptr/detail/atomic_count_pt.hpp"
	header "boost/smart_ptr/detail/operator_bool.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_ppc.hpp"
	header "boost/smart_ptr/detail/yield_k.hpp"
	header "boost/smart_ptr/detail/sp_interlocked.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_aix.hpp"
	header "boost/smart_ptr/detail/sp_typeinfo_.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_vacpp_ppc.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_cw_ppc.hpp"
	header "boost/smart_ptr/detail/sp_convertible.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_pt.hpp"
	header "boost/smart_ptr/detail/spinlock_w32.hpp"
	header "boost/smart_ptr/detail/atomic_count_gcc_atomic.hpp"
	header "boost/smart_ptr/detail/sp_disable_deprecated.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_acc_ia64.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_nt.hpp"
	header "boost/smart_ptr/detail/spinlock_gcc_atomic.hpp"
	header "boost/smart_ptr/detail/local_counted_base.hpp"
	header "boost/smart_ptr/detail/atomic_count.hpp"
	header "boost/smart_ptr/detail/sp_thread_sleep.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_w32.hpp"
	header "boost/smart_ptr/detail/sp_thread_yield.hpp"
	header "boost/smart_ptr/detail/atomic_count_win32.hpp"
	header "boost/smart_ptr/detail/atomic_count_nt.hpp"
	header "boost/smart_ptr/detail/atomic_count_gcc.hpp"
	header "boost/smart_ptr/detail/sp_win32_sleep.hpp"
	header "boost/smart_ptr/detail/lightweight_thread.hpp"
	header "boost/smart_ptr/detail/spinlock_nt.hpp"
	header "boost/smart_ptr/detail/lwm_win32_cs.hpp"
	header "boost/smart_ptr/detail/sp_forward.hpp"
	header "boost/smart_ptr/detail/spinlock_gcc_arm.hpp"
	header "boost/smart_ptr/detail/atomic_count_gcc_x86.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp"
	header "boost/smart_ptr/detail/sp_obsolete.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_sparc.hpp"
	header "boost/smart_ptr/detail/sp_has_gcc_intrinsics.hpp"
	header "boost/smart_ptr/detail/atomic_count_std_atomic.hpp"
	header "boost/smart_ptr/detail/shared_count.hpp"
	header "boost/smart_ptr/detail/lwm_pthreads.hpp"
	header "boost/smart_ptr/detail/sp_has_sync_intrinsics.hpp"
	header "boost/smart_ptr/detail/lightweight_mutex.hpp"
	header "boost/smart_ptr/detail/atomic_count_spin.hpp"
	header "boost/smart_ptr/detail/sp_counted_base.hpp"
	header "boost/smart_ptr/detail/atomic_count_sync.hpp"
	header "boost/smart_ptr/detail/sp_noexcept.hpp"
	header "boost/smart_ptr/detail/sp_counted_impl.hpp"
	header "boost/smart_ptr/detail/lwm_std_mutex.hpp"
	header "boost/smart_ptr/detail/spinlock.hpp"
	header "boost/smart_ptr/detail/spinlock_pool.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_sync.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_spin.hpp"
	header "boost/smart_ptr/detail/spinlock_std_atomic.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_ia64.hpp"
	header "boost/smart_ptr/detail/sp_thread_pause.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_gcc_mips.hpp"
	header "boost/smart_ptr/detail/quick_allocator.hpp"
	header "boost/smart_ptr/detail/sp_counted_base_snc_ps3.hpp"
	header "boost/smart_ptr/allocate_local_shared_array.hpp"
	header "boost/smart_ptr/make_shared_array.hpp"
	header "boost/smart_ptr/make_unique.hpp"
	header "boost/smart_ptr/local_shared_ptr.hpp"
	header "boost/smart_ptr/shared_ptr.hpp"
	header "boost/smart_ptr/scoped_array.hpp"
	header "boost/smart_ptr/allocate_unique.hpp"
	header "boost/smart_ptr/weak_ptr.hpp"
	header "boost/smart_ptr/bad_weak_ptr.hpp"
	header "boost/smart_ptr/owner_hash.hpp"
	header "boost/smart_ptr/atomic_shared_ptr.hpp"
	header "boost/smart_ptr/enable_shared_from_raw.hpp"
	header "boost/smart_ptr/make_local_shared_array.hpp"
	header "boost/smart_ptr/make_shared.hpp"
	header "boost/smart_ptr/enable_shared_from_this.hpp"
	header "boost/smart_ptr/make_local_shared.hpp"
	header "boost/smart_ptr.hpp"
	header "boost/shared_array.hpp"
	header "boost/intrusive_ptr.hpp"
	header "boost/detail/atomic_count.hpp"
	header "boost/detail/lightweight_thread.hpp"
	header "boost/detail/lightweight_mutex.hpp"
	header "boost/detail/quick_allocator.hpp"
	header "boost/make_unique.hpp"
	header "boost/shared_ptr.hpp"
	header "boost/scoped_array.hpp"
	header "boost/weak_ptr.hpp"
	header "boost/pointer_cast.hpp"
	header "boost/make_shared.hpp"
	header "boost/enable_shared_from_this.hpp"
	header "boost/pointer_to_other.hpp"
	export *
}