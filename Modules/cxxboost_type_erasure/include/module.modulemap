module cxxboost_type_erasure [system] {
	header "boost/type_erasure/builtin.hpp"
	header "boost/type_erasure/callable.hpp"
	header "boost/type_erasure/same_type.hpp"
	header "boost/type_erasure/binding_of.hpp"
	header "boost/type_erasure/static_binding.hpp"
	header "boost/type_erasure/dynamic_any_cast.hpp"
	header "boost/type_erasure/dynamic_binding.hpp"
	header "boost/type_erasure/relaxed.hpp"
	header "boost/type_erasure/param.hpp"
	header "boost/type_erasure/register_binding.hpp"
	header "boost/type_erasure/typeid_of.hpp"
	header "boost/type_erasure/config.hpp"
	header "boost/type_erasure/tuple.hpp"
	header "boost/type_erasure/derived.hpp"
	header "boost/type_erasure/is_empty.hpp"
	header "boost/type_erasure/is_placeholder.hpp"
	header "boost/type_erasure/member.hpp"
	header "boost/type_erasure/any.hpp"
	header "boost/type_erasure/detail/any_base.hpp"
	header "boost/type_erasure/detail/normalize_deduced.hpp"
	header "boost/type_erasure/detail/access.hpp"
	header "boost/type_erasure/detail/check_map.hpp"
	header "boost/type_erasure/detail/const.hpp"
	header "boost/type_erasure/detail/get_placeholders.hpp"
	header "boost/type_erasure/detail/meta.hpp"
	header "boost/type_erasure/detail/member11.hpp"
	header "boost/type_erasure/detail/extract_concept.hpp"
	header "boost/type_erasure/detail/dynamic_vtable.hpp"
	header "boost/type_erasure/detail/null.hpp"
	header "boost/type_erasure/detail/check_call.hpp"
	header "boost/type_erasure/detail/instantiate.hpp"
	header "boost/type_erasure/detail/get_signature.hpp"
	header "boost/type_erasure/detail/adapt_to_vtable.hpp"
	header "boost/type_erasure/detail/storage.hpp"
	header "boost/type_erasure/detail/auto_link.hpp"
	header "boost/type_erasure/detail/normalize.hpp"
	header "boost/type_erasure/detail/rebind_placeholders.hpp"
	header "boost/type_erasure/detail/construct.hpp"
	header "boost/type_erasure/detail/macro.hpp"
	header "boost/type_erasure/detail/vtable.hpp"
	header "boost/type_erasure/placeholder.hpp"
	header "boost/type_erasure/deduced.hpp"
	header "boost/type_erasure/is_subconcept.hpp"
	header "boost/type_erasure/call.hpp"
	header "boost/type_erasure/constructible.hpp"
	header "boost/type_erasure/operators.hpp"
	header "boost/type_erasure/any_cast.hpp"
	header "boost/type_erasure/placeholder_of.hpp"
	header "boost/type_erasure/rebind_any.hpp"
	header "boost/type_erasure/check_match.hpp"
	header "boost/type_erasure/require_match.hpp"
	header "boost/type_erasure/concept_interface.hpp"
	header "boost/type_erasure/concept_of.hpp"
	header "boost/type_erasure/free.hpp"
	header "boost/type_erasure/iterator.hpp"
	header "boost/type_erasure/binding.hpp"
	header "boost/type_erasure/exception.hpp"
	export *
}