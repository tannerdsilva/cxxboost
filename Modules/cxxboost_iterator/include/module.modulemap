module cxxboost_iterator [system] {
	header "boost/shared_container_iterator.hpp"
	header "boost/next_prior.hpp"
	header "boost/iterator_adaptors.hpp"
	header "boost/pointee.hpp"
	header "boost/generator_iterator.hpp"
	header "boost/iterator/iterator_archetypes.hpp"
	header "boost/iterator/iterator_facade.hpp"
	header "boost/iterator/advance.hpp"
	header "boost/iterator/iterator_adaptor.hpp"
	header "boost/iterator/minimum_category.hpp"
	header "boost/iterator/transform_iterator.hpp"
	header "boost/iterator/is_lvalue_iterator.hpp"
	header "boost/iterator/indirect_iterator.hpp"
	header "boost/iterator/distance.hpp"
	header "boost/iterator/function_input_iterator.hpp"
	header "boost/iterator/new_iterator_tests.hpp"
	header "boost/iterator/detail/config_undef.hpp"
	header "boost/iterator/detail/minimum_category.hpp"
	header "boost/iterator/detail/any_conversion_eater.hpp"
	header "boost/iterator/detail/facade_iterator_category.hpp"
	header "boost/iterator/detail/config_def.hpp"
	header "boost/iterator/detail/enable_if.hpp"
	header "boost/iterator/is_readable_iterator.hpp"
	header "boost/iterator/iterator_traits.hpp"
	header "boost/iterator/iterator_categories.hpp"
	header "boost/iterator/zip_iterator.hpp"
	header "boost/iterator/permutation_iterator.hpp"
	header "boost/iterator/interoperable.hpp"
	header "boost/iterator/reverse_iterator.hpp"
	header "boost/iterator/counting_iterator.hpp"
	header "boost/iterator/filter_iterator.hpp"
	header "boost/iterator/iterator_concepts.hpp"
	header "boost/iterator/function_output_iterator.hpp"
	header "boost/indirect_reference.hpp"
	header "boost/function_output_iterator.hpp"
	header "boost/pending/iterator_adaptors.hpp"
	header "boost/pending/detail/int_iterator.hpp"
	header "boost/pending/iterator_tests.hpp"
	export *
}