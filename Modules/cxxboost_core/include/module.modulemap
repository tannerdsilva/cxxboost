module cxxboost_core [system] {
	header "boost/non_type.hpp"
	header "boost/core/alloc_construct.hpp"
	header "boost/core/use_default.hpp"
	header "boost/core/typeinfo.hpp"
	header "boost/core/cmath.hpp"
	header "boost/core/exchange.hpp"
	header "boost/core/allocator_access.hpp"
	header "boost/core/max_align.hpp"
	header "boost/core/default_allocator.hpp"
	header "boost/core/span.hpp"
	header "boost/core/no_exceptions_support.hpp"
	header "boost/core/snprintf.hpp"
	header "boost/core/type_name.hpp"
	header "boost/core/size.hpp"
	header "boost/core/underlying_type.hpp"
	header "boost/core/bit.hpp"
	header "boost/core/pointer_traits.hpp"
	header "boost/core/checked_delete.hpp"
	header "boost/core/allocator_traits.hpp"
	header "boost/core/serialization.hpp"
	header "boost/core/verbose_terminate_handler.hpp"
	header "boost/core/quick_exit.hpp"
	header "boost/core/memory_resource.hpp"
	header "boost/core/lightweight_test.hpp"
	header "boost/core/explicit_operator_bool.hpp"
	header "boost/core/detail/lwt_unattended.hpp"
	header "boost/core/detail/is_same.hpp"
	header "boost/core/detail/string_view.hpp"
	header "boost/core/detail/splitmix64.hpp"
	header "boost/core/launder.hpp"
	header "boost/core/make_span.hpp"
	header "boost/core/swap.hpp"
	header "boost/core/alignof.hpp"
	header "boost/core/null_deleter.hpp"
	header "boost/core/is_same.hpp"
	header "boost/core/addressof.hpp"
	header "boost/core/identity.hpp"
	header "boost/core/data.hpp"
	header "boost/core/empty_value.hpp"
	header "boost/core/demangle.hpp"
	header "boost/core/ignore_unused.hpp"
	header "boost/core/nvp.hpp"
	header "boost/core/noinit_adaptor.hpp"
	header "boost/core/fclose_deleter.hpp"
	header "boost/core/uncaught_exceptions.hpp"
	header "boost/core/lightweight_test_trait.hpp"
	header "boost/core/first_scalar.hpp"
	header "boost/core/scoped_enum.hpp"
	header "boost/core/enable_if.hpp"
	header "boost/core/ref.hpp"
	header "boost/core/noncopyable.hpp"
	header "boost/type.hpp"
	header "boost/checked_delete.hpp"
	header "boost/detail/no_exceptions_support.hpp"
	header "boost/detail/sp_typeinfo.hpp"
	header "boost/detail/lightweight_test.hpp"
	header "boost/detail/scoped_enum_emulation.hpp"
	header "boost/detail/iterator.hpp"
	header "boost/swap.hpp"
	header "boost/visit_each.hpp"
	header "boost/iterator.hpp"
	header "boost/get_pointer.hpp"
	header "boost/ref.hpp"
	header "boost/noncopyable.hpp"
	header "boost/utility/explicit_operator_bool.hpp"
	header "boost/utility/swap.hpp"
	header "boost/utility/addressof.hpp"
	header "boost/utility/enable_if.hpp"
	export *
}