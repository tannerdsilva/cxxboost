module cxxboost_date_time [system] {
	header "boost/date_time/int_adapter.hpp"
	header "boost/date_time/date_defs.hpp"
	header "boost/date_time/local_time_adjustor.hpp"
	header "boost/date_time/date_names_put.hpp"
	header "boost/date_time/time_iterator.hpp"
	header "boost/date_time/time_defs.hpp"
	header "boost/date_time/string_parse_tree.hpp"
	header "boost/date_time/time_duration.hpp"
	header "boost/date_time/constrained_value.hpp"
	header "boost/date_time/time.hpp"
	header "boost/date_time/format_date_parser.hpp"
	header "boost/date_time/gregorian/conversion.hpp"
	header "boost/date_time/gregorian/gregorian.hpp"
	header "boost/date_time/gregorian/greg_date.hpp"
	header "boost/date_time/gregorian/greg_duration_types.hpp"
	header "boost/date_time/gregorian/greg_weekday.hpp"
	header "boost/date_time/gregorian/formatters_limited.hpp"
	header "boost/date_time/gregorian/greg_day_of_year.hpp"
	header "boost/date_time/gregorian/gregorian_types.hpp"
	header "boost/date_time/gregorian/formatters.hpp"
	header "boost/date_time/gregorian/greg_month.hpp"
	header "boost/date_time/gregorian/greg_serialize.hpp"
	header "boost/date_time/gregorian/greg_ymd.hpp"
	header "boost/date_time/gregorian/greg_calendar.hpp"
	header "boost/date_time/gregorian/greg_day.hpp"
	header "boost/date_time/gregorian/gregorian_io.hpp"
	header "boost/date_time/gregorian/greg_facet.hpp"
	header "boost/date_time/gregorian/parsers.hpp"
	header "boost/date_time/gregorian/greg_duration.hpp"
	header "boost/date_time/gregorian/greg_year.hpp"
	header "boost/date_time/year_month_day.hpp"
	header "boost/date_time/strings_from_facet.hpp"
	header "boost/date_time/date_formatting.hpp"
	header "boost/date_time/time_zone_base.hpp"
	header "boost/date_time/date_generator_formatter.hpp"
	header "boost/date_time/dst_transition_generators.hpp"
	header "boost/date_time/microsec_time_clock.hpp"
	header "boost/date_time/date_iterator.hpp"
	header "boost/date_time/gregorian_calendar.hpp"
	header "boost/date_time/filetime_functions.hpp"
	header "boost/date_time/find_match.hpp"
	header "boost/date_time/c_time.hpp"
	header "boost/date_time/time_system_counted.hpp"
	header "boost/date_time/date_duration.hpp"
	header "boost/date_time/date_generators.hpp"
	header "boost/date_time/special_values_formatter.hpp"
	header "boost/date_time/period_formatter.hpp"
	header "boost/date_time/wrapping_int.hpp"
	header "boost/date_time/time_resolution_traits.hpp"
	header "boost/date_time/date_formatting_locales.hpp"
	header "boost/date_time/locale_config.hpp"
	header "boost/date_time/date_parsing.hpp"
	header "boost/date_time/date.hpp"
	header "boost/date_time/special_defs.hpp"
	header "boost/date_time/posix_time/conversion.hpp"
	header "boost/date_time/posix_time/ptime.hpp"
	header "boost/date_time/posix_time/date_duration_operators.hpp"
	header "boost/date_time/posix_time/posix_time_io.hpp"
	header "boost/date_time/posix_time/posix_time_config.hpp"
	header "boost/date_time/posix_time/posix_time_system.hpp"
	header "boost/date_time/posix_time/time_serialize.hpp"
	header "boost/date_time/posix_time/posix_time_types.hpp"
	header "boost/date_time/posix_time/time_period.hpp"
	header "boost/date_time/posix_time/posix_time.hpp"
	header "boost/date_time/posix_time/time_formatters.hpp"
	header "boost/date_time/posix_time/posix_time_duration.hpp"
	header "boost/date_time/posix_time/posix_time_legacy_io.hpp"
	header "boost/date_time/posix_time/time_parsers.hpp"
	header "boost/date_time/posix_time/time_formatters_limited.hpp"
	header "boost/date_time/date_generator_parser.hpp"
	header "boost/date_time/adjust_functors.hpp"
	header "boost/date_time/date_format_simple.hpp"
	header "boost/date_time/local_time/custom_time_zone.hpp"
	header "boost/date_time/local_time/conversion.hpp"
	header "boost/date_time/local_time/date_duration_operators.hpp"
	header "boost/date_time/local_time/local_time.hpp"
	header "boost/date_time/local_time/tz_database.hpp"
	header "boost/date_time/local_time/posix_time_zone.hpp"
	header "boost/date_time/local_time/dst_transition_day_rules.hpp"
	header "boost/date_time/local_time/local_time_io.hpp"
	header "boost/date_time/local_time/local_time_types.hpp"
	header "boost/date_time/local_time/local_date_time.hpp"
	header "boost/date_time/time_formatting_streams.hpp"
	header "boost/date_time/tz_db_base.hpp"
	header "boost/date_time/compiler_config.hpp"
	header "boost/date_time/time_facet.hpp"
	header "boost/date_time/time_clock.hpp"
	header "boost/date_time/period_parser.hpp"
	header "boost/date_time/dst_rules.hpp"
	header "boost/date_time/parse_format_base.hpp"
	header "boost/date_time/time_parsing.hpp"
	header "boost/date_time/date_formatting_limited.hpp"
	header "boost/date_time/local_timezone_defs.hpp"
	header "boost/date_time/time_system_split.hpp"
	header "boost/date_time/special_values_parser.hpp"
	header "boost/date_time/date_duration_types.hpp"
	header "boost/date_time/c_local_time_adjustor.hpp"
	header "boost/date_time/iso_format.hpp"
	header "boost/date_time/string_convert.hpp"
	header "boost/date_time/time_zone_names.hpp"
	header "boost/date_time/date_facet.hpp"
	header "boost/date_time/period.hpp"
	header "boost/date_time/date_clock_device.hpp"
	header "boost/date_time.hpp"
	export *
}