module cxxboost_poly_collection [system] {
	header "boost/poly_collection/algorithm.hpp"
	header "boost/poly_collection/detail/is_acceptable.hpp"
	header "boost/poly_collection/detail/callable_wrapper.hpp"
	header "boost/poly_collection/detail/segment.hpp"
	header "boost/poly_collection/detail/is_nothrow_eq_comparable.hpp"
	header "boost/poly_collection/detail/auto_iterator.hpp"
	header "boost/poly_collection/detail/any_model.hpp"
	header "boost/poly_collection/detail/segment_split.hpp"
	header "boost/poly_collection/detail/value_holder.hpp"
	header "boost/poly_collection/detail/segment_backend.hpp"
	header "boost/poly_collection/detail/is_final.hpp"
	header "boost/poly_collection/detail/is_invocable.hpp"
	header "boost/poly_collection/detail/allocator_adaptor.hpp"
	header "boost/poly_collection/detail/type_restitution.hpp"
	header "boost/poly_collection/detail/base_model.hpp"
	header "boost/poly_collection/detail/poly_collection.hpp"
	header "boost/poly_collection/detail/functional.hpp"
	header "boost/poly_collection/detail/iterator_impl.hpp"
	header "boost/poly_collection/detail/callable_wrapper_iterator.hpp"
	header "boost/poly_collection/detail/split_segment.hpp"
	header "boost/poly_collection/detail/iterator_traits.hpp"
	header "boost/poly_collection/detail/packed_segment.hpp"
	header "boost/poly_collection/detail/is_constructible.hpp"
	header "boost/poly_collection/detail/type_info_map.hpp"
	header "boost/poly_collection/detail/any_iterator.hpp"
	header "boost/poly_collection/detail/stride_iterator.hpp"
	header "boost/poly_collection/detail/function_model.hpp"
	header "boost/poly_collection/detail/is_equality_comparable.hpp"
	header "boost/poly_collection/any_collection_fwd.hpp"
	header "boost/poly_collection/any_collection.hpp"
	header "boost/poly_collection/base_collection_fwd.hpp"
	header "boost/poly_collection/function_collection.hpp"
	header "boost/poly_collection/base_collection.hpp"
	header "boost/poly_collection/function_collection_fwd.hpp"
	header "boost/poly_collection/exception.hpp"
	export *
}