module cxxboost_wave [system] {
	header "boost/wave.hpp"
	header "boost/wave/token_ids.hpp"
	header "boost/wave/util/functor_input.hpp"
	header "boost/wave/util/cpp_ifblock.hpp"
	header "boost/wave/util/iteration_context.hpp"
	header "boost/wave/util/file_position.hpp"
	header "boost/wave/util/macro_definition.hpp"
	header "boost/wave/util/interpret_pragma.hpp"
	header "boost/wave/util/pattern_parser.hpp"
	header "boost/wave/util/transform_iterator.hpp"
	header "boost/wave/util/symbol_table.hpp"
	header "boost/wave/util/filesystem_compatibility.hpp"
	header "boost/wave/util/cpp_iterator.hpp"
	header "boost/wave/util/macro_helpers.hpp"
	header "boost/wave/util/cpp_macromap.hpp"
	header "boost/wave/util/cpp_include_paths.hpp"
	header "boost/wave/util/time_conversion_helper.hpp"
	header "boost/wave/util/cpp_macromap_utils.hpp"
	header "boost/wave/util/flex_string.hpp"
	header "boost/wave/util/cpp_macromap_predef.hpp"
	header "boost/wave/util/unput_queue_iterator.hpp"
	header "boost/wave/util/insert_whitespace_detection.hpp"
	header "boost/wave/cpp_throw.hpp"
	header "boost/wave/whitespace_handling.hpp"
	header "boost/wave/wave_version.hpp"
	header "boost/wave/cpp_exceptions.hpp"
	header "boost/wave/cpp_iteration_context.hpp"
	header "boost/wave/grammars/cpp_grammar.hpp"
	header "boost/wave/grammars/cpp_expression_grammar.hpp"
	header "boost/wave/grammars/cpp_has_include_grammar.hpp"
	header "boost/wave/grammars/cpp_literal_grammar_gen.hpp"
	header "boost/wave/grammars/cpp_chlit_grammar.hpp"
	header "boost/wave/grammars/cpp_has_include_grammar_gen.hpp"
	header "boost/wave/grammars/cpp_defined_grammar_gen.hpp"
	header "boost/wave/grammars/cpp_predef_macros_gen.hpp"
	header "boost/wave/grammars/cpp_expression_grammar_gen.hpp"
	header "boost/wave/grammars/cpp_predef_macros_grammar.hpp"
	header "boost/wave/grammars/cpp_defined_grammar.hpp"
	header "boost/wave/grammars/cpp_intlit_grammar.hpp"
	header "boost/wave/grammars/cpp_grammar_gen.hpp"
	header "boost/wave/grammars/cpp_expression_value.hpp"
	header "boost/wave/grammars/cpp_value_error.hpp"
	header "boost/wave/language_support.hpp"
	header "boost/wave/preprocessing_hooks.hpp"
	header "boost/wave/cpplexer/token_cache.hpp"
	header "boost/wave/cpplexer/convert_trigraphs.hpp"
	header "boost/wave/cpplexer/validate_universal_char.hpp"
	header "boost/wave/cpplexer/cpp_lex_token.hpp"
	header "boost/wave/cpplexer/re2clex/aq.hpp"
	header "boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp"
	header "boost/wave/cpplexer/re2clex/scanner.hpp"
	header "boost/wave/cpplexer/re2clex/cpp_re.hpp"
	header "boost/wave/cpplexer/cpplexer_exceptions.hpp"
	header "boost/wave/cpplexer/cpp_lex_interface.hpp"
	header "boost/wave/cpplexer/cpp_lex_iterator.hpp"
	header "boost/wave/cpplexer/detect_include_guards.hpp"
	header "boost/wave/cpplexer/cpp_lex_interface_generator.hpp"
	header "boost/wave/wave_config.hpp"
	header "boost/wave/wave_config_constant.hpp"
	header "boost/wave/cpp_context.hpp"
	export *
}