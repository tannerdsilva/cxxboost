module cxxboost_numeric__interval [system] {
	header "boost/numeric/interval.hpp"
	header "boost/numeric/interval/rounding.hpp"
	header "boost/numeric/interval/utility.hpp"
	header "boost/numeric/interval/interval.hpp"
	header "boost/numeric/interval/hw_rounding.hpp"
	header "boost/numeric/interval/policies.hpp"
	header "boost/numeric/interval/io.hpp"
	header "boost/numeric/interval/ext/integer.hpp"
	header "boost/numeric/interval/ext/x86_fast_rounding_control.hpp"
	header "boost/numeric/interval/transc.hpp"
	header "boost/numeric/interval/arith.hpp"
	header "boost/numeric/interval/limits.hpp"
	header "boost/numeric/interval/arith3.hpp"
	header "boost/numeric/interval/arith2.hpp"
	header "boost/numeric/interval/detail/bugs.hpp"
	header "boost/numeric/interval/detail/sparc_rounding_control.hpp"
	header "boost/numeric/interval/detail/test_input.hpp"
	header "boost/numeric/interval/detail/division.hpp"
	header "boost/numeric/interval/detail/bcc_rounding_control.hpp"
	header "boost/numeric/interval/detail/ppc_rounding_control.hpp"
	header "boost/numeric/interval/detail/alpha_rounding_control.hpp"
	header "boost/numeric/interval/detail/c99sub_rounding_control.hpp"
	header "boost/numeric/interval/detail/x86_rounding_control.hpp"
	header "boost/numeric/interval/detail/c99_rounding_control.hpp"
	header "boost/numeric/interval/detail/msvc_rounding_control.hpp"
	header "boost/numeric/interval/detail/interval_prototype.hpp"
	header "boost/numeric/interval/detail/x86gcc_rounding_control.hpp"
	header "boost/numeric/interval/detail/ia64_rounding_control.hpp"
	header "boost/numeric/interval/constants.hpp"
	header "boost/numeric/interval/rounded_transc.hpp"
	header "boost/numeric/interval/checking.hpp"
	header "boost/numeric/interval/compare/lexicographic.hpp"
	header "boost/numeric/interval/compare/set.hpp"
	header "boost/numeric/interval/compare/explicit.hpp"
	header "boost/numeric/interval/compare/possible.hpp"
	header "boost/numeric/interval/compare/tribool.hpp"
	header "boost/numeric/interval/compare/certain.hpp"
	header "boost/numeric/interval/utility_fwd.hpp"
	header "boost/numeric/interval/rounded_arith.hpp"
	header "boost/numeric/interval/compare.hpp"
	export *
}