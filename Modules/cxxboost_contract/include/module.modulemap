module cxxboost_contract [system] {
	header "boost/contract/check.hpp"
	header "boost/contract/core/access.hpp"
	header "boost/contract/core/config.hpp"
	header "boost/contract/core/constructor_precondition.hpp"
	header "boost/contract/core/check_macro.hpp"
	header "boost/contract/core/virtual.hpp"
	header "boost/contract/core/specify.hpp"
	header "boost/contract/core/exception.hpp"
	header "boost/contract/override.hpp"
	header "boost/contract/function.hpp"
	header "boost/contract/old.hpp"
	header "boost/contract/detail/operation/function.hpp"
	header "boost/contract/detail/operation/destructor.hpp"
	header "boost/contract/detail/operation/constructor.hpp"
	header "boost/contract/detail/operation/public_function.hpp"
	header "boost/contract/detail/operation/static_public_function.hpp"
	header "boost/contract/detail/inlined/core/exception.hpp"
	header "boost/contract/detail/inlined/old.hpp"
	header "boost/contract/detail/inlined/detail/checking.hpp"
	header "boost/contract/detail/check.hpp"
	header "boost/contract/detail/declspec.hpp"
	header "boost/contract/detail/inlined.hpp"
	header "boost/contract/detail/static_local_var.hpp"
	header "boost/contract/detail/type_traits/mirror.hpp"
	header "boost/contract/detail/type_traits/optional.hpp"
	header "boost/contract/detail/type_traits/member_function_types.hpp"
	header "boost/contract/detail/config.hpp"
	header "boost/contract/detail/debug.hpp"
	header "boost/contract/detail/operator_safe_bool.hpp"
	header "boost/contract/detail/tvariadic.hpp"
	header "boost/contract/detail/auto_ptr.hpp"
	header "boost/contract/detail/condition/cond_inv.hpp"
	header "boost/contract/detail/condition/cond_subcontracting.hpp"
	header "boost/contract/detail/condition/cond_post.hpp"
	header "boost/contract/detail/condition/cond_base.hpp"
	header "boost/contract/detail/assert.hpp"
	header "boost/contract/detail/checking.hpp"
	header "boost/contract/detail/decl.hpp"
	header "boost/contract/detail/name.hpp"
	header "boost/contract/detail/none.hpp"
	header "boost/contract/detail/preprocessor/keyword/protected.hpp"
	header "boost/contract/detail/preprocessor/keyword/public.hpp"
	header "boost/contract/detail/preprocessor/keyword/virtual.hpp"
	header "boost/contract/detail/preprocessor/keyword/private.hpp"
	header "boost/contract/detail/preprocessor/keyword/utility/is.hpp"
	header "boost/contract/detail/noop.hpp"
	header "boost/contract/detail/exception.hpp"
	header "boost/contract/destructor.hpp"
	header "boost/contract/assert.hpp"
	header "boost/contract/constructor.hpp"
	header "boost/contract/public_function.hpp"
	header "boost/contract/call_if.hpp"
	header "boost/contract/base_types.hpp"
	header "boost/contract_macro.hpp"
	header "boost/contract.hpp"
	export *
}