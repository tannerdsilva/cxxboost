module cxxboost_bimap [system] {
	header "boost/bimap.hpp"
	header "boost/bimap/container_adaptor/multiset_adaptor.hpp"
	header "boost/bimap/container_adaptor/sequence_container_adaptor.hpp"
	header "boost/bimap/container_adaptor/unordered_set_adaptor.hpp"
	header "boost/bimap/container_adaptor/container_adaptor.hpp"
	header "boost/bimap/container_adaptor/unordered_multimap_adaptor.hpp"
	header "boost/bimap/container_adaptor/map_adaptor.hpp"
	header "boost/bimap/container_adaptor/ordered_associative_container_adaptor.hpp"
	header "boost/bimap/container_adaptor/vector_adaptor.hpp"
	header "boost/bimap/container_adaptor/detail/identity_converters.hpp"
	header "boost/bimap/container_adaptor/detail/functor_bag.hpp"
	header "boost/bimap/container_adaptor/detail/comparison_adaptor.hpp"
	header "boost/bimap/container_adaptor/detail/non_unique_container_helper.hpp"
	header "boost/bimap/container_adaptor/detail/key_extractor.hpp"
	header "boost/bimap/container_adaptor/set_adaptor.hpp"
	header "boost/bimap/container_adaptor/support/iterator_facade_converters.hpp"
	header "boost/bimap/container_adaptor/unordered_multiset_adaptor.hpp"
	header "boost/bimap/container_adaptor/vector_map_adaptor.hpp"
	header "boost/bimap/container_adaptor/associative_container_adaptor.hpp"
	header "boost/bimap/container_adaptor/list_map_adaptor.hpp"
	header "boost/bimap/container_adaptor/list_adaptor.hpp"
	header "boost/bimap/container_adaptor/unordered_associative_container_adaptor.hpp"
	header "boost/bimap/container_adaptor/multimap_adaptor.hpp"
	header "boost/bimap/container_adaptor/unordered_map_adaptor.hpp"
	header "boost/bimap/unordered_multiset_of.hpp"
	header "boost/bimap/relation/structured_pair.hpp"
	header "boost/bimap/relation/detail/mutant.hpp"
	header "boost/bimap/relation/detail/access_builder.hpp"
	header "boost/bimap/relation/detail/metadata_access_builder.hpp"
	header "boost/bimap/relation/detail/static_access_builder.hpp"
	header "boost/bimap/relation/detail/to_mutable_relation_functor.hpp"
	header "boost/bimap/relation/support/data_extractor.hpp"
	header "boost/bimap/relation/support/get.hpp"
	header "boost/bimap/relation/support/opposite_tag.hpp"
	header "boost/bimap/relation/support/is_tag_of_member_at.hpp"
	header "boost/bimap/relation/support/member_with_tag.hpp"
	header "boost/bimap/relation/support/get_pair_functor.hpp"
	header "boost/bimap/relation/support/value_type_of.hpp"
	header "boost/bimap/relation/support/pair_type_by.hpp"
	header "boost/bimap/relation/support/pair_by.hpp"
	header "boost/bimap/relation/pair_layout.hpp"
	header "boost/bimap/relation/symmetrical_base.hpp"
	header "boost/bimap/relation/member_at.hpp"
	header "boost/bimap/relation/mutant_relation.hpp"
	header "boost/bimap/unordered_set_of.hpp"
	header "boost/bimap/bimap.hpp"
	header "boost/bimap/tags/support/apply_to_value_type.hpp"
	header "boost/bimap/tags/support/default_tagged.hpp"
	header "boost/bimap/tags/support/value_type_of.hpp"
	header "boost/bimap/tags/support/overwrite_tagged.hpp"
	header "boost/bimap/tags/support/tag_of.hpp"
	header "boost/bimap/tags/support/is_tagged.hpp"
	header "boost/bimap/tags/tagged.hpp"
	header "boost/bimap/property_map/set_support.hpp"
	header "boost/bimap/property_map/unordered_set_support.hpp"
	header "boost/bimap/detail/generate_index_binder.hpp"
	header "boost/bimap/detail/manage_bimap_key.hpp"
	header "boost/bimap/detail/modifier_adaptor.hpp"
	header "boost/bimap/detail/generate_relation_binder.hpp"
	header "boost/bimap/detail/bimap_core.hpp"
	header "boost/bimap/detail/non_unique_views_helper.hpp"
	header "boost/bimap/detail/set_view_base.hpp"
	header "boost/bimap/detail/is_set_type_of.hpp"
	header "boost/bimap/detail/test/check_metadata.hpp"
	header "boost/bimap/detail/concept_tags.hpp"
	header "boost/bimap/detail/set_view_iterator.hpp"
	header "boost/bimap/detail/generate_view_binder.hpp"
	header "boost/bimap/detail/map_view_iterator.hpp"
	header "boost/bimap/detail/user_interface_config.hpp"
	header "boost/bimap/detail/manage_additional_parameters.hpp"
	header "boost/bimap/detail/debug/static_error.hpp"
	header "boost/bimap/detail/map_view_base.hpp"
	header "boost/bimap/unconstrained_set_of.hpp"
	header "boost/bimap/support/value_type_by.hpp"
	header "boost/bimap/support/lambda.hpp"
	header "boost/bimap/support/map_by.hpp"
	header "boost/bimap/support/data_type_by.hpp"
	header "boost/bimap/support/map_type_by.hpp"
	header "boost/bimap/support/key_type_by.hpp"
	header "boost/bimap/support/iterator_type_by.hpp"
	header "boost/bimap/vector_of.hpp"
	header "boost/bimap/multiset_of.hpp"
	header "boost/bimap/set_of.hpp"
	header "boost/bimap/views/map_view.hpp"
	header "boost/bimap/views/multiset_view.hpp"
	header "boost/bimap/views/unordered_map_view.hpp"
	header "boost/bimap/views/vector_map_view.hpp"
	header "boost/bimap/views/unconstrained_set_view.hpp"
	header "boost/bimap/views/list_map_view.hpp"
	header "boost/bimap/views/unordered_multiset_view.hpp"
	header "boost/bimap/views/unordered_multimap_view.hpp"
	header "boost/bimap/views/list_set_view.hpp"
	header "boost/bimap/views/unconstrained_map_view.hpp"
	header "boost/bimap/views/unordered_set_view.hpp"
	header "boost/bimap/views/vector_set_view.hpp"
	header "boost/bimap/views/multimap_view.hpp"
	header "boost/bimap/views/set_view.hpp"
	header "boost/bimap/list_of.hpp"
	export *
}